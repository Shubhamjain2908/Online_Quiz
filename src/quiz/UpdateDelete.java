/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SHUBHAM
 */

public class UpdateDelete extends javax.swing.JFrame {
    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    long id=0;
    DefaultTableModel model ;
         
    public UpdateDelete() {
        initComponents();
         try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Driver Loaded");

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/quiz","root","root");
            System.out.println("Connected");

            st = con.createStatement();
            
        } 
        catch (ClassNotFoundException | SQLException e) 
        {
            System.out.println(e);
        }
                    model = new DefaultTableModel();
                    table.setModel(model);
                    //model.addColumn("Q.Id");
                    model.addColumn("Question");
                    //model.addColumn("Ans");
     FillCombo();    
    }
    private void FillCombo()
    {
        try
        {
            String query=("Select * from subject_reg");
            //st = con.createStatement();
            rs=st.executeQuery(query);
            System.out.println("Query : "+query);
            while(rs.next())
            {
                jb.addItem(rs.getString(2));
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        Qid = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Question = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        OptionA = new javax.swing.JTextField();
        OptionB = new javax.swing.JTextField();
        OptionC = new javax.swing.JTextField();
        OptionD = new javax.swing.JTextField();
        ROptionA = new javax.swing.JRadioButton();
        ROptionB = new javax.swing.JRadioButton();
        ROptionC = new javax.swing.JRadioButton();
        ROptionD = new javax.swing.JRadioButton();
        All = new javax.swing.JRadioButton();
        None = new javax.swing.JRadioButton();
        del = new javax.swing.JButton();
        sav = new javax.swing.JButton();
        jb = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        edit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane2.setBackground(new java.awt.Color(204, 255, 255));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Edit Your Questions Here");

        Qid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Qid.setText("Q");

        Question.setColumns(20);
        Question.setRows(5);
        jScrollPane1.setViewportView(Question);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Option A");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Option B");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Option C");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Option D");

        buttonGroup1.add(ROptionA);
        ROptionA.setText("A");

        buttonGroup1.add(ROptionB);
        ROptionB.setText("B");

        buttonGroup1.add(ROptionC);
        ROptionC.setText("C");

        buttonGroup1.add(ROptionD);
        ROptionD.setText("D");

        buttonGroup1.add(All);
        All.setText("All of Above");
        All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllActionPerformed(evt);
            }
        });

        buttonGroup1.add(None);
        None.setText("None of these");
        None.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoneActionPerformed(evt);
            }
        });

        del.setForeground(new java.awt.Color(255, 51, 51));
        del.setText("Delete");
        del.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        sav.setForeground(new java.awt.Color(0, 0, 255));
        sav.setText("Save ");
        sav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(Qid, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(OptionA, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(OptionB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(OptionC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(OptionD, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(ROptionA, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(ROptionB, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(ROptionC, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(ROptionD, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(All, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(None, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(del, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(sav, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(Qid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(All)
                                .addGap(24, 24, 24)
                                .addComponent(None))
                            .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(OptionB))
                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(OptionC))
                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(OptionD))
                                .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(OptionA, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ROptionA)
                            .addComponent(ROptionD)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(ROptionB)
                                .addGap(18, 18, 18)
                                .addComponent(del))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(ROptionC)
                                .addGap(18, 18, 18)
                                .addComponent(sav)))
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Qid))
                .addGap(51, 51, 51)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(OptionA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROptionA))
                .addGap(47, 47, 47)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(OptionB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROptionB)
                    .addComponent(del))
                .addGap(47, 47, 47)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(OptionC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROptionC)
                    .addComponent(sav))
                .addGap(47, 47, 47)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(OptionD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ROptionD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(All)
                    .addComponent(None))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jbItemStateChanged(evt);
            }
        });

        jButton3.setText("Home");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        edit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jDesktopPane2.setLayer(jDesktopPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(edit, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(edit)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jb, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(29, 29, 29)
                        .addComponent(jb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(edit)
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void savActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savActionPerformed
        String Q=Question.getText().toUpperCase();
        String OA=OptionA.getText().toUpperCase();
        String OB=OptionB.getText().toUpperCase();
        String OC=OptionC.getText().toUpperCase();
        String OD=OptionD.getText().toUpperCase();
        String et=jb.getSelectedItem().toString();
        String q=Qid.getText();
            int ans=0;
			if(ROptionA.isSelected())
			{
				ans=1;
			}
			else if(ROptionB.isSelected())
			{
				ans=2;
			}
			else if(ROptionC.isSelected())
			{
				ans=3;
			}
			else if(ROptionD.isSelected())
			{
				ans=4;
			}
			else if(All.isSelected())
			{
				ans=5;
			}
			else if(None.isSelected())
			{
				ans=6;
			}
        try
        {
            if(Q!=null && et!=null && OA!=null && OB!=null && OC!=null && OD!=null && !Q.trim().equals("") && !et.trim().equals("") && !OA.trim().equals("") && !OB.trim().equals("") && !OC.trim().equals("") && !OD.trim().equals("") && ans>0){   
            String query="UPDATE exam_questions SET Subject_Name='"+et+"',Questions='"+Q+"',OptionA='"+OA+"',OptionB='"+OB+"',OptionC='"+OC+"',OptionD='"+OD+"',Ans='"+ans+"' WHERE Question_ID='"+q+"'";
            int i=st.executeUpdate(query);
            System.out.println("QUERY : "+query);
             
            if(i>0)
            {
                System.out.println("Question Updated Successfully...");
                JOptionPane.showMessageDialog(null,"Question Updated","Alert",JOptionPane.OK_CANCEL_OPTION);
                UpdateDelete ud=new UpdateDelete();
                this.setVisible(false);
                ud.setVisible(true);
            }
           
          }
             else{
                JOptionPane.showMessageDialog(null,"Question Updation failed...","Alert",JOptionPane.OK_CANCEL_OPTION);
                System.out.println("Question Insertion failed...");
            }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_savActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        AdminHome a=new AdminHome();
        a.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        String s=Qid.getText();
        System.out.println(s);
        
        try
        {
            String query=("Delete from exam_questions where Question_ID='"+s+"'");
            int i=st.executeUpdate(query);
            if(i>0)
        {
            System.out.println("Question deleted Successfully...");
            JOptionPane.showMessageDialog(null,"Question Deleted","Alert",JOptionPane.WARNING_MESSAGE);
            UpdateDelete ud=new UpdateDelete();
            this.setVisible(false);
            ud.setVisible(true);
        }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_delActionPerformed
        
    private void jbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jbItemStateChanged
        if (evt.getStateChange()==ItemEvent.SELECTED)
        {
            model.setRowCount(0);
            /*int row=model.getRowCount();
            System.out.println("Rows = "+row);
            for (int i = 0; i < row; i++) {
                model.removeRow(i);
            }*/
        String item=(String)jb.getSelectedItem();
        System.out.println("Exam name"+item);
        UpdateDelete u=new UpdateDelete();
        
        try
        {
            String query="Select Questions,Question_ID from exam_questions where Subject_Name='"+item+"' order by Question_ID";
            rs=st.executeQuery(query);
            System.out.println(query);
            
            while(rs.next())
            {
                
                String str=rs.getString("Questions");
                String qid=rs.getString("Question_ID");
                System.out.println(str);
                System.out.println(qid);
                model.addRow(new Object[]{str});
            }
       }
        catch(SQLException e)
        {
            System.out.println(e);
        }
      }
        
    }//GEN-LAST:event_jbItemStateChanged

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
            int s=table.getSelectedColumn();
            int s1=table.getSelectedRow();
            System.out.println(s+" "+s1);
            String w=model.getValueAt(s1 , s).toString();
            System.out.println(w);
            try
            {
                String query2="Select * from exam_questions where questions='"+w+"'";
                rs=st.executeQuery(query2);
                while(rs.next())
                {
                    int ans=rs.getInt(8);
                    Qid.setText(rs.getString(1));
                    Question.setText(w);
                    OptionA.setText(rs.getString(4));
                    OptionB.setText(rs.getString(5));
                    OptionC.setText(rs.getString(6));
                    OptionD.setText(rs.getString(7));
                    if (ans == 1) {
                        OptionA.setForeground(Color.GREEN);
                    }
                    if (ans == 2) {
                        OptionB.setForeground(Color.GREEN);
                    }
                    if (ans == 3) {
                        OptionC.setForeground(Color.GREEN);
                    }
                    if (ans >= 4) {
                        OptionD.setForeground(Color.GREEN);
                    }
                }
            
            }
            catch(SQLException e)
            {
                System.out.println(e);
            }
            
    }//GEN-LAST:event_editActionPerformed

    private void AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllActionPerformed
        OptionD.setText(All.getText());
        OptionD.setEnabled(false);
    }//GEN-LAST:event_AllActionPerformed

    private void NoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoneActionPerformed
        OptionD.setText(None.getText());
        OptionD.setEnabled(false);
    }//GEN-LAST:event_NoneActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton All;
    private javax.swing.JRadioButton None;
    private javax.swing.JTextField OptionA;
    private javax.swing.JTextField OptionB;
    private javax.swing.JTextField OptionC;
    private javax.swing.JTextField OptionD;
    private javax.swing.JLabel Qid;
    private javax.swing.JTextArea Question;
    private javax.swing.JRadioButton ROptionA;
    private javax.swing.JRadioButton ROptionB;
    private javax.swing.JRadioButton ROptionC;
    private javax.swing.JRadioButton ROptionD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton del;
    private javax.swing.JButton edit;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> jb;
    private javax.swing.JButton sav;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
